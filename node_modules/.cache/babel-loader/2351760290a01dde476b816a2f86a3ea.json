{"ast":null,"code":"var _jsxFileName = \"/Users/friedebold/dev/potfolio/src/components/Timeline/Decoration.tsx\";\nimport React from 'react';\nimport './timeline.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Decoration = ({\n  windowWidth,\n  markingWidth\n}) => {\n  const strokeWidth = markingWidth;\n  const scale = Math.min(windowWidth, window.innerHeight) / 2 / 100;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timeline-decoration\",\n    style: {\n      height: `calc(100px + ${strokeWidth / scale / 2}px)`,\n      transform: `scale(${scale})`,\n      transformOrigin: 'bottom left'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      height: 100 + strokeWidth / scale / 2,\n      width: '100',\n      style: {},\n      children: /*#__PURE__*/_jsxDEV(\"path\", {\n        strokeWidth: strokeWidth / scale,\n        d: `M 0 ${strokeWidth / scale / 2} c 30 0 40 20 30 40 c -10 20 -10 40 20 30 c 30 -10 30 10 30 30`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Decoration;\nexport default Decoration;\n\nvar _c;\n\n$RefreshReg$(_c, \"Decoration\");","map":{"version":3,"sources":["/Users/friedebold/dev/potfolio/src/components/Timeline/Decoration.tsx"],"names":["React","Decoration","windowWidth","markingWidth","strokeWidth","scale","Math","min","window","innerHeight","height","transform","transformOrigin"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,gBAAP;;;AAOA,MAAMC,UAA2B,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAD,KAAmC;AACrE,QAAMC,WAAW,GAAGD,YAApB;AAEA,QAAME,KAAK,GAAGC,IAAI,CAACC,GAAL,CAASL,WAAT,EAAsBM,MAAM,CAACC,WAA7B,IAA4C,CAA5C,GAAgD,GAA9D;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAqC,IAAA,KAAK,EAAE;AAC1CC,MAAAA,MAAM,EAAG,gBAAgBN,WAAW,GAAGC,KAAf,GAAwB,CAAE,KADR;AAE1CM,MAAAA,SAAS,EAAG,SAAQN,KAAM,GAFgB;AAEZO,MAAAA,eAAe,EAAE;AAFL,KAA5C;AAAA,2BAIE;AAAK,MAAA,MAAM,EAAE,MAAOR,WAAW,GAAGC,KAAf,GAAwB,CAA3C;AAA8C,MAAA,KAAK,EAAE,KAArD;AAA4D,MAAA,KAAK,EAAE,EAAnE;AAAA,6BAEE;AAAM,QAAA,WAAW,EAAED,WAAW,GAAGC,KAAjC;AACE,QAAA,CAAC,EAAG,OAAOD,WAAW,GAAGC,KAAf,GAAwB,CAAE;AADtC;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAjBD;;KAAMJ,U;AAmBN,eAAeA,UAAf","sourcesContent":["import React from 'react'\nimport './timeline.css'\n\ninterface Props {\n  windowWidth: number\n  markingWidth: number\n}\n\nconst Decoration: React.FC<Props> = ({ windowWidth, markingWidth }) => {\n  const strokeWidth = markingWidth\n\n  const scale = Math.min(windowWidth, window.innerHeight) / 2 / 100\n\n  return (\n    <div className='timeline-decoration' style={{\n      height: `calc(100px + ${(strokeWidth / scale) / 2}px)`,\n      transform: `scale(${scale})`, transformOrigin: 'bottom left',\n    }}>\n      <svg height={100 + (strokeWidth / scale) / 2} width={'100'} style={{\n      }} >\n        <path strokeWidth={strokeWidth / scale}\n          d={`M 0 ${(strokeWidth / scale) / 2} c 30 0 40 20 30 40 c -10 20 -10 40 20 30 c 30 -10 30 10 30 30`} />\n      </svg>\n    </div>\n  )\n}\n\nexport default Decoration"]},"metadata":{},"sourceType":"module"}