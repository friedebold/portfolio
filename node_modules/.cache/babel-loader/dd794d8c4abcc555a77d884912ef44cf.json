{"ast":null,"code":"var _jsxFileName = \"/Users/friedebold/dev/potfolio/src/components/Timeline/OpenExperience.tsx\";\nimport moment from 'moment';\nimport React from 'react';\nimport { IoIosClose } from 'react-icons/io';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OpenExperience = ({\n  setXpId,\n  activeExperience\n}) => {\n  const {\n    company,\n    desc,\n    end,\n    location,\n    start,\n    position\n  } = activeExperience;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"openExperience\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"openExperience-header openExperience-container-padding\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"openExperience-header-top\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"openExperience-txt-padding\",\n          children: company\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), setXpId && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"openExperience-btn\",\n          onClick: () => setXpId(-1),\n          children: /*#__PURE__*/_jsxDEV(IoIosClose, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"openExperience-txt-padding\",\n        children: position\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"openExperience-header-txt openExperience-txt-padding\",\n        children: location\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"openExperience-header-txt openExperience-txt-padding\",\n        children: [moment(start.toDate()).format('MMM YYYY'), ' - ', end !== 'today' ? moment(end.toDate()).format('MMM YYYY') : end]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"openExperience-container-padding \",\n      children: desc.map((info, index) => {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"openExperience-txt-line-height openExperience-txt-padding\",\n          children: info\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 20\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_c = OpenExperience;\nexport default OpenExperience;\n\nvar _c;\n\n$RefreshReg$(_c, \"OpenExperience\");","map":{"version":3,"sources":["/Users/friedebold/dev/potfolio/src/components/Timeline/OpenExperience.tsx"],"names":["moment","React","IoIosClose","OpenExperience","setXpId","activeExperience","company","desc","end","location","start","position","toDate","format","map","info","index"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,gBAA3B;;;AAQA,MAAMC,cAA+B,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAAmC;AAEzE,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,IAAX;AAAiBC,IAAAA,GAAjB;AAAsBC,IAAAA,QAAtB;AAAgCC,IAAAA,KAAhC;AAAuCC,IAAAA;AAAvC,MAAoDN,gBAA1D;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,wDAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,2BAAf;AAAA,gCACE;AAAG,UAAA,SAAS,EAAC,4BAAb;AAAA,oBAA2CC;AAA3C;AAAA;AAAA;AAAA;AAAA,gBADF,EAGIF,OAAO,iBACP;AAAQ,UAAA,SAAS,EAAC,oBAAlB;AAAuC,UAAA,OAAO,EAAE,MAAMA,OAAO,CAAC,CAAC,CAAF,CAA7D;AAAA,iCACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAUE;AAAI,QAAA,SAAS,EAAC,4BAAd;AAAA,kBAA4CO;AAA5C;AAAA;AAAA;AAAA;AAAA,cAVF,eAWE;AAAG,QAAA,SAAS,EAAC,sDAAb;AAAA,kBAAqEF;AAArE;AAAA;AAAA;AAAA;AAAA,cAXF,eAYE;AAAG,QAAA,SAAS,EAAC,sDAAb;AAAA,mBAAqET,MAAM,CAACU,KAAK,CAACE,MAAN,EAAD,CAAN,CAAuBC,MAAvB,CAA8B,UAA9B,CAArE,EAAgH,KAAhH,EAAuHL,GAAG,KAAK,OAAR,GAAkBR,MAAM,CAACQ,GAAG,CAACI,MAAJ,EAAD,CAAN,CAAqBC,MAArB,CAA4B,UAA5B,CAAlB,GAA4DL,GAAnL;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAeE;AAAK,MAAA,SAAS,EAAC,mCAAf;AAAA,gBAEID,IAAI,CAACO,GAAL,CAAS,CAACC,IAAD,EAAeC,KAAf,KAAiC;AACxC,4BAAO;AAAG,UAAA,SAAS,EAAC,2DAAb;AAAA,oBAAsFD;AAAtF,WAA8EC,KAA9E;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFD;AAFJ;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CA7BD;;KAAMb,c;AA+BN,eAAeA,cAAf","sourcesContent":["import moment from 'moment'\nimport React from 'react'\nimport { IoIosClose } from 'react-icons/io'\nimport { Experience } from \"../../apis/model\"\n\ninterface Props {\n  setXpId?: React.Dispatch<React.SetStateAction<number>>\n  activeExperience: Experience\n}\n\nconst OpenExperience: React.FC<Props> = ({ setXpId, activeExperience }) => {\n\n  const { company, desc, end, location, start, position } = activeExperience\n\n  return (\n    <div className='openExperience' >\n      <div className='openExperience-header openExperience-container-padding'>\n        <div className='openExperience-header-top'>\n          <p className='openExperience-txt-padding'>{company}</p>\n          {\n            setXpId &&\n            <button className='openExperience-btn' onClick={() => setXpId(-1)}>\n              <IoIosClose />\n            </button>\n          }\n        </div>\n        <h3 className='openExperience-txt-padding'>{position}</h3>\n        <p className='openExperience-header-txt openExperience-txt-padding'>{location}</p>\n        <p className='openExperience-header-txt openExperience-txt-padding'>{moment(start.toDate()).format('MMM YYYY')}{' - '}{end !== 'today' ? moment(end.toDate()).format('MMM YYYY') : end}</p>\n      </div>\n      <div className='openExperience-container-padding '>\n        {\n          desc.map((info: string, index: number) => {\n            return <p className='openExperience-txt-line-height openExperience-txt-padding' key={index}>{info}</p>\n          })\n        }\n      </div>\n    </div >\n  )\n}\n\nexport default OpenExperience"]},"metadata":{},"sourceType":"module"}