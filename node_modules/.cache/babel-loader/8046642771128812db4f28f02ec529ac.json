{"ast":null,"code":"var _jsxFileName = \"/Users/friedebold/dev/potfolio/src/other.../Contact/index.tsx\";\nimport React from \"react\";\nimport ContactItem from \"./ContactItem\";\nimport { createElement as _createElement } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Contact = ({\n  profileData\n  /* , setViewedPage */\n\n}) => {\n  const {\n    contacts\n  } = profileData;\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"list\",\n    children: contacts.sort((a, b) => a.priority - b.priority).map((contact, index) => {\n      return /*#__PURE__*/_createElement(ContactItem, {\n        contact,\n\n        /*  {...{ setViewedPage }} */\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }\n      });\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this)\n  /*    <div className='contact-or-seperator'>\n      <p>or</p>\n    </div>\n    <button className='cv-download-btn' onClick={() => downloadCV()}>\n      <p className='cv-download-txt'>Download Daniel's CV</p>\n    </button>\n    <CV {...{ profileData }} {...{ bodyRef }}></CV>\n  */\n\n  /*  <div className=\"contact-or-seperator\">\n      <p>or</p>\n    </div> */\n\n  /*     <ContactForm /> */\n  ;\n};\n\n_c = Contact;\nexport default Contact;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"sources":["/Users/friedebold/dev/potfolio/src/other.../Contact/index.tsx"],"names":["React","ContactItem","Contact","profileData","contacts","sort","a","b","priority","map","contact","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,WAAP,MAAwB,eAAxB;;;;AAOA,MAAMC,OAAwB,GAAG,CAAC;AAAEC,EAAAA;AAAY;;AAAd,CAAD,KAA2C;AAC1E,QAAM;AAAEC,IAAAA;AAAF,MAAeD,WAArB;AAEA,sBACE;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA,cACGC,QAAQ,CACNC,IADF,CACO,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,QAAF,GAAaD,CAAC,CAACC,QADhC,EAEEC,GAFF,CAEM,CAACC,OAAD,EAAUC,KAAV,KAAoB;AACvB,0BACE,eAAC,WAAD;AACQD,QAAAA,OADR;;AAEE;AAA8B,QAAA,GAAG,EAAEC,KAFrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAMD,KATF;AADH;AAAA;AAAA;AAAA;AAAA;AAaA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AACI;AACJ;AACA;;AACI;AAzBF;AA2BD,CA9BD;;KAAMT,O;AA+BN,eAAeA,OAAf","sourcesContent":["import React from \"react\";\nimport { Profile } from \"../../apis/model\";\nimport ContactItem from \"./ContactItem\";\n\ninterface Props {\n  profileData: Profile;\n  /*  setViewedPage: React.Dispatch<SetStateAction<string>> */\n}\n\nconst Contact: React.FC<Props> = ({ profileData /* , setViewedPage */ }) => {\n  const { contacts } = profileData;\n\n  return (\n    <ul className=\"list\">\n      {contacts\n        .sort((a, b) => a.priority - b.priority)\n        .map((contact, index) => {\n          return (\n            <ContactItem\n              {...{ contact }}\n              /*  {...{ setViewedPage }} */ key={index}\n            />\n          );\n        })}\n    </ul>\n\n    /*    <div className='contact-or-seperator'>\n        <p>or</p>\n      </div>\n      <button className='cv-download-btn' onClick={() => downloadCV()}>\n        <p className='cv-download-txt'>Download Daniel's CV</p>\n      </button>\n      <CV {...{ profileData }} {...{ bodyRef }}></CV>\n */\n    /*  <div className=\"contact-or-seperator\">\n        <p>or</p>\n      </div> */\n    /*     <ContactForm /> */\n  );\n};\nexport default Contact;\n"]},"metadata":{},"sourceType":"module"}