{"ast":null,"code":"export const fetchGeo = async () => {\n  return fetch('https://ipgeolocation.abstractapi.com/v1/?api_key=1a92c0ba6cdc489eb748bd34324eb85f').then(res => res.json()).then(res => {\n    const geoData = {\n      location: {\n        country: res.country,\n        region: res.region,\n        city: res.city,\n        flag: res.flag.emoji\n      }\n    };\n    return geoData;\n  }).catch(err => console.log(err));\n};\nexport const getBodyData = (country, region, flag, city, windowDimensions) => {\n  return {\n    \"fields\": {\n      \"location\": {\n        \"mapValue\": {\n          \"fields\": {\n            \"country\": {\n              \"stringValue\": country\n            },\n            \"city\": {\n              \"stringValue\": city\n            },\n            \"region\": {\n              \"stringValue\": region\n            },\n            \"flag\": {\n              \"stringValue\": flag\n            }\n          }\n        }\n      },\n      \"dimensions\": {\n        \"mapValue\": {\n          \"fields\": {\n            \"width\": {\n              \"integerValue\": windowDimensions.width\n            },\n            \"height\": {\n              \"integerValue\": windowDimensions.height\n            }\n          }\n        }\n      },\n      \"timestamp\": {\n        \"timestampValue\": new Date()\n      }\n    }\n  };\n};","map":{"version":3,"sources":["/Users/friedebold/dev/potfolio/src/apis/geoApi.ts"],"names":["fetchGeo","fetch","then","res","json","geoData","location","country","region","city","flag","emoji","catch","err","console","log","getBodyData","windowDimensions","width","height","Date"],"mappings":"AAEA,OAAO,MAAMA,QAAQ,GAAG,YAAY;AAClC,SAAOC,KAAK,CAAC,oFAAD,CAAL,CACJC,IADI,CACEC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADV,EAEJF,IAFI,CAEEC,GAAD,IAAS;AACb,UAAME,OAAqC,GAAG;AAC5CC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,OAAO,EAAEJ,GAAG,CAACI,OADL;AAERC,QAAAA,MAAM,EAAEL,GAAG,CAACK,MAFJ;AAGRC,QAAAA,IAAI,EAAEN,GAAG,CAACM,IAHF;AAIRC,QAAAA,IAAI,EAAEP,GAAG,CAACO,IAAJ,CAASC;AAJP;AADkC,KAA9C;AAQA,WAAON,OAAP;AACD,GAZI,EAaJO,KAbI,CAaGC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAbX,CAAP;AAcD,CAfM;AAiBP,OAAO,MAAMG,WAAW,GAAG,CAACT,OAAD,EAAkBC,MAAlB,EAAkCE,IAAlC,EAAgDD,IAAhD,EAA8DQ,gBAA9D,KAA+F;AACxH,SAAO;AACL,cAAU;AACR,kBAAY;AACV,oBAAY;AACV,oBAAU;AACR,uBAAW;AACT,6BAAeV;AADN,aADH;AAIR,oBAAQ;AACN,6BAAeE;AADT,aAJA;AAOR,sBAAU;AACR,6BAAeD;AADP,aAPF;AAUR,oBAAQ;AACN,6BAAeE;AADT;AAVA;AADA;AADF,OADJ;AAmBR,oBAAc;AACZ,oBAAY;AACV,oBAAU;AACR,qBAAS;AACP,8BAAgBO,gBAAgB,CAACC;AAD1B,aADD;AAIR,sBAAU;AACR,8BAAgBD,gBAAgB,CAACE;AADzB;AAJF;AADA;AADA,OAnBN;AA+BR,mBAAa;AACX,0BAAkB,IAAIC,IAAJ;AADP;AA/BL;AADL,GAAP;AAqCD,CAtCM","sourcesContent":["import { ClientLocation, Dimensions } from './model'\n\nexport const fetchGeo = async () => {\n  return fetch('https://ipgeolocation.abstractapi.com/v1/?api_key=1a92c0ba6cdc489eb748bd34324eb85f')\n    .then((res) => res.json())\n    .then((res) => {\n      const geoData: { location: ClientLocation } = {\n        location: {\n          country: res.country,\n          region: res.region,\n          city: res.city,\n          flag: res.flag.emoji\n        },\n      }\n      return geoData\n    })\n    .catch((err) => console.log(err))\n}\n\nexport const getBodyData = (country: string, region: string, flag: string, city: string, windowDimensions: Dimensions) => {\n  return {\n    \"fields\": {\n      \"location\": {\n        \"mapValue\": {\n          \"fields\": {\n            \"country\": {\n              \"stringValue\": country\n            },\n            \"city\": {\n              \"stringValue\": city\n            },\n            \"region\": {\n              \"stringValue\": region\n            },\n            \"flag\": {\n              \"stringValue\": flag\n            }\n          }\n        }\n      },\n      \"dimensions\": {\n        \"mapValue\": {\n          \"fields\": {\n            \"width\": {\n              \"integerValue\": windowDimensions.width\n            },\n            \"height\": {\n              \"integerValue\": windowDimensions.height\n            }\n          }\n        }\n      },\n      \"timestamp\": {\n        \"timestampValue\": new Date()\n      },\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}