{"ast":null,"code":"var _jsxFileName = \"/Users/friedebold/dev/potfolio/src/other.../Contact/ContactItem.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./contact.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactItem = ({\n  contact\n  /* , setViewedPage */\n\n}) => {\n  _s();\n\n  const [savedToClipboard, setSavedToClipboard] = useState(false);\n  useEffect(() => {\n    if (savedToClipboard) {\n      setTimeout(() => {\n        setSavedToClipboard(false);\n      }, 1000);\n    }\n  }, [savedToClipboard]);\n\n  const saveToClipboard = () => {\n    navigator.clipboard.writeText(contact.title);\n    setSavedToClipboard(true);\n    /*   setViewedPage(contact.title) */\n  };\n\n  if (contact.href) {\n    return /*#__PURE__*/_jsxDEV(\"a\", {\n      className: \"list-item\"\n      /* onClick={() => setViewedPage(contact.title)} */\n      ,\n      style: {\n        textDecoration: \"none\"\n      },\n      target: \"none\",\n      href: contact.href,\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: contact.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  } else return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"list-item\",\n    style: {\n      cursor: \"pointer\"\n    },\n    onClick: () => saveToClipboard(),\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          opacity: savedToClipboard ? 0.5 : 1\n        },\n        children: !savedToClipboard ? contact.title : \"copying to clipboard...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 7\n  }, this);\n};\n\n_s(ContactItem, \"e3mCRNqEUACNrj3HTmwNrJ0Fik4=\");\n\n_c = ContactItem;\nexport default ContactItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactItem\");","map":{"version":3,"sources":["/Users/friedebold/dev/potfolio/src/other.../Contact/ContactItem.tsx"],"names":["React","useEffect","useState","ContactItem","contact","savedToClipboard","setSavedToClipboard","setTimeout","saveToClipboard","navigator","clipboard","writeText","title","href","textDecoration","cursor","opacity"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAO,eAAP;;;AAOA,MAAMC,WAA4B,GAAG,CAAC;AAAEC,EAAAA;AAAQ;;AAAV,CAAD,KAAuC;AAAA;;AAC1E,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CJ,QAAQ,CAAC,KAAD,CAAxD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAII,gBAAJ,EAAsB;AACpBE,MAAAA,UAAU,CAAC,MAAM;AACfD,QAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACD,OAFS,EAEP,IAFO,CAAV;AAGD;AACF,GANQ,EAMN,CAACD,gBAAD,CANM,CAAT;;AAQA,QAAMG,eAAe,GAAG,MAAM;AAC5BC,IAAAA,SAAS,CAACC,SAAV,CAAoBC,SAApB,CAA8BP,OAAO,CAACQ,KAAtC;AACAN,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACA;AACD,GAJD;;AAMA,MAAIF,OAAO,CAACS,IAAZ,EAAkB;AAChB,wBACE;AACE,MAAA,SAAS,EAAC;AACV;AAFF;AAEqD,MAAA,KAAK,EAAE;AACxDC,QAAAA,cAAc,EAAE;AADwC,OAF5D;AAKE,MAAA,MAAM,EAAC,MALT;AAME,MAAA,IAAI,EAAEV,OAAO,CAACS,IANhB;AAAA,6BAQE;AAAA,+BACE;AAAA,oBAAIT,OAAO,CAACQ;AAAZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA,YADF;AAcD,GAfD,MAgBE,oBACE;AACE,IAAA,SAAS,EAAC,WADZ;AAEE,IAAA,KAAK,EAAE;AAAEG,MAAAA,MAAM,EAAE;AAAV,KAFT;AAGE,IAAA,OAAO,EAAE,MAAMP,eAAe,EAHhC;AAAA,2BAKE;AAAA,6BACE;AAAG,QAAA,KAAK,EAAE;AAAEQ,UAAAA,OAAO,EAAEX,gBAAgB,GAAG,GAAH,GAAS;AAApC,SAAV;AAAA,kBACG,CAACA,gBAAD,GAAoBD,OAAO,CAACQ,KAA5B,GAAoC;AADvC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,UADF;AAaH,CA9CD;;GAAMT,W;;KAAAA,W;AAgDN,eAAeA,WAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { ContactPoint } from \"../../apis/model\";\nimport \"./contact.css\";\n\ninterface Props {\n  contact: ContactPoint;\n  /*   setViewedPage: React.Dispatch<SetStateAction<string>> */\n}\n\nconst ContactItem: React.FC<Props> = ({ contact /* , setViewedPage */ }) => {\n  const [savedToClipboard, setSavedToClipboard] = useState(false);\n\n  useEffect(() => {\n    if (savedToClipboard) {\n      setTimeout(() => {\n        setSavedToClipboard(false);\n      }, 1000);\n    }\n  }, [savedToClipboard]);\n\n  const saveToClipboard = () => {\n    navigator.clipboard.writeText(contact.title);\n    setSavedToClipboard(true);\n    /*   setViewedPage(contact.title) */\n  };\n\n  if (contact.href) {\n    return (\n      <a\n        className=\"list-item\"\n        /* onClick={() => setViewedPage(contact.title)} */ style={{\n          textDecoration: \"none\",\n        }}\n        target=\"none\"\n        href={contact.href}\n      >\n        <li>\n          <p>{contact.title}</p>\n        </li>\n      </a>\n    );\n  } else\n    return (\n      <button\n        className=\"list-item\"\n        style={{ cursor: \"pointer\" }}\n        onClick={() => saveToClipboard()}\n      >\n        <li>\n          <p style={{ opacity: savedToClipboard ? 0.5 : 1 }}>\n            {!savedToClipboard ? contact.title : \"copying to clipboard...\"}\n          </p>\n        </li>\n      </button>\n    );\n};\n\nexport default ContactItem;\n"]},"metadata":{},"sourceType":"module"}