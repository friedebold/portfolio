{"ast":null,"code":"import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyA7ZtxzONuN2ZbVnV5rjn1DtcEBrb7aHOM\",\n  authDomain: \"portfolio-43d1b.firebaseapp.com\",\n  projectId: \"portfolio-43d1b\",\n  storageBucket: \"portfolio-43d1b.appspot.com\",\n  messagingSenderId: \"5996957596\",\n  appId: \"1:5996957596:web:9f2b0ad9b391c301b08259\",\n  measurementId: \"G-WPKYEZ6B6T\"\n};\nif (!firebase.apps.length) firebase.initializeApp(firebaseConfig);else firebase.app();\nexport default firebase;\nconst db = firebase.firestore();\nconst auth = firebase.auth();\nexport const fetchInfo = async () => {\n  return db.collection(\"data\").doc(\"atyNgtYGT2tbctbC1FEh\").get().then(e => e.data());\n};\nexport const sendEmail = async (replyTo, name, message, setEmailStatus) => {\n  console.log(replyTo, name, message);\n  return db.collection(\"mail\").add({\n    to: \"daniel@friedebold.net\",\n    message: {\n      replyTo: replyTo,\n      subject: `Request by ${name}`,\n      text: message\n    }\n  }).then(() => setEmailStatus(\"success\")).catch(error => setEmailStatus(\"error\"));\n}; //Analytics\n\nexport const loginUser = async (email, password) => {\n  auth.signInWithEmailAndPassword(email, password).catch(error => {\n    var errorCode = error.code;\n\n    if (errorCode === \"auth/wrong-password\" || errorCode === \"auth/invalid-email\") {\n      console.log(\"credentials true\");\n    } else {\n      console.log(errorCode);\n    }\n  });\n};\nexport const fetchAnalytics = async (setAnalyticsData) => {\n  const query = db.collection(\"analytics\").orderBy(\"timestamp\", \"desc\");\n  query.onSnapshot(querySnapshot => {\n    const analyticsData = [];\n    querySnapshot.forEach(doc => {\n      analyticsData.push(doc.data());\n    });\n    setAnalyticsData(analyticsData);\n  }, err => {\n    console.log(`Encountered error: ${err}`);\n  });\n};\nexport const stopFetchingAnalytics = async () => {\n  const unsub = db.collection(\"analytics\").onSnapshot(() => {});\n  unsub();\n};\nexport const addAnalytics = async (location, windowDimensions, timestamp, setFirebaseDocId) => {\n  const ref = db.collection(\"analytics\").doc();\n  return db.collection(\"analytics\").doc(`${ref.id}`).set({\n    location: location,\n    dimensions: windowDimensions,\n    timestamp: timestamp,\n    viewed: []\n  }).then(() => setFirebaseDocId(ref.id)).catch(error => console.log(\"error\"));\n};\nexport const addContactAnalytics = async (refId, viewedPage) => {\n  const timestamp = new Date();\n  return db.collection(\"analytics\").doc(`${refId}`).set({\n    viewed:\n    /* admin. */\n    firebase.firestore.FieldValue.arrayUnion({\n      item: viewedPage,\n      timestamp: timestamp\n    })\n  }, {\n    merge: true\n  }).then(() => console.log(\"success\")).catch(error => console.log(\"error\"));\n};","map":{"version":3,"sources":["/Users/friedebold/dev/potfolio/src/apis/firebaseApi.ts"],"names":["firebase","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","apps","length","initializeApp","app","db","firestore","auth","fetchInfo","collection","doc","get","then","e","data","sendEmail","replyTo","name","message","setEmailStatus","console","log","add","to","subject","text","catch","error","loginUser","email","password","signInWithEmailAndPassword","errorCode","code","fetchAnalytics","setAnalyticsData","query","orderBy","onSnapshot","querySnapshot","analyticsData","forEach","push","err","stopFetchingAnalytics","unsub","addAnalytics","location","windowDimensions","timestamp","setFirebaseDocId","ref","id","set","dimensions","viewed","addContactAnalytics","refId","viewedPage","Date","FieldValue","arrayUnion","item","merge"],"mappings":"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","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport React, { SetStateAction } from \"react\";\nimport { ClientLocation, Dimensions, PageView, Profile } from \"./model\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyA7ZtxzONuN2ZbVnV5rjn1DtcEBrb7aHOM\",\n  authDomain: \"portfolio-43d1b.firebaseapp.com\",\n  projectId: \"portfolio-43d1b\",\n  storageBucket: \"portfolio-43d1b.appspot.com\",\n  messagingSenderId: \"5996957596\",\n  appId: \"1:5996957596:web:9f2b0ad9b391c301b08259\",\n  measurementId: \"G-WPKYEZ6B6T\",\n};\nif (!firebase.apps.length) firebase.initializeApp(firebaseConfig);\nelse firebase.app();\n\nexport default firebase;\nconst db = firebase.firestore();\nconst auth = firebase.auth();\n\nexport const fetchInfo = async () => {\n  return db\n    .collection(\"data\")\n    .doc(\"atyNgtYGT2tbctbC1FEh\")\n    .get()\n    .then((e) => e.data() as Profile);\n};\n\nexport const sendEmail = async (\n  replyTo: string,\n  name: string,\n  message: string,\n  setEmailStatus: React.Dispatch<\n    React.SetStateAction<\"non-initiated\" | \"error\" | \"success\">\n  >\n) => {\n  console.log(replyTo, name, message);\n  return db\n    .collection(\"mail\")\n    .add({\n      to: \"daniel@friedebold.net\",\n      message: {\n        replyTo: replyTo,\n        subject: `Request by ${name}`,\n        text: message,\n      },\n    })\n    .then(() => setEmailStatus(\"success\"))\n    .catch((error) => setEmailStatus(\"error\"));\n};\n\n//Analytics\n\nexport const loginUser = async (email: string, password: string) => {\n  auth.signInWithEmailAndPassword(email, password).catch((error) => {\n    var errorCode = error.code;\n\n    if (\n      errorCode === \"auth/wrong-password\" ||\n      errorCode === \"auth/invalid-email\"\n    ) {\n      console.log(\"credentials true\");\n    } else {\n      console.log(errorCode);\n    }\n  });\n};\n\nexport const fetchAnalytics = async (\n  setAnalyticsData: React.Dispatch<React.SetStateAction<PageView[]>>\n) => {\n  const query = db.collection(\"analytics\").orderBy(\"timestamp\", \"desc\");\n  query.onSnapshot(\n    (querySnapshot) => {\n      const analyticsData: PageView[] = [];\n      querySnapshot.forEach((doc) => {\n        analyticsData.push(doc.data() as PageView);\n      });\n      setAnalyticsData(analyticsData);\n    },\n    (err) => {\n      console.log(`Encountered error: ${err}`);\n    }\n  );\n};\n\nexport const stopFetchingAnalytics = async () => {\n  const unsub = db.collection(\"analytics\").onSnapshot(() => {});\n  unsub();\n};\n\nexport const addAnalytics = async (\n  location: ClientLocation,\n  windowDimensions: Dimensions,\n  timestamp: Date,\n  setFirebaseDocId: React.Dispatch<SetStateAction<string>>\n) => {\n  const ref = db.collection(\"analytics\").doc();\n  return db\n    .collection(\"analytics\")\n    .doc(`${ref.id}`)\n    .set({\n      location: location,\n      dimensions: windowDimensions,\n      timestamp: timestamp,\n      viewed: [],\n    })\n    .then(() => setFirebaseDocId(ref.id))\n    .catch((error) => console.log(\"error\"));\n};\n\nexport const addContactAnalytics = async (\n  refId: string,\n  viewedPage: string\n) => {\n  const timestamp = new Date();\n  return db\n    .collection(\"analytics\")\n    .doc(`${refId}`)\n    .set(\n      {\n        viewed: /* admin. */ firebase.firestore.FieldValue.arrayUnion({\n          item: viewedPage,\n          timestamp: timestamp,\n        }),\n      },\n      { merge: true }\n    )\n    .then(() => console.log(\"success\"))\n    .catch((error) => console.log(\"error\"));\n};\n"]},"metadata":{},"sourceType":"module"}